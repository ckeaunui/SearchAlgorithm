import tensorflow as tf
import tensorflow_hub as hub
import numpy as np
import pandas as pd


path = '/Users/christiankeaunui/PycharmProjects/DC5/transcripts.txt'
data = pd.read_csv(path)

data.columns = ['Transcript', 'URL']
embed = hub.load("https://tfhub.dev/google/universal-sentence-encoder/4")


def take_key(element):
    return(element[0])


def cosine_similarity(data, query, results):

    similarity = []
    transcripts = data['Transcript']

    for i in range(len(transcripts)):

        temp = []
        temp.append(query)
        temp.append(transcripts[i])

        temp_matrix = embed(temp)

        similarity_matrix = np.inner(temp_matrix, temp_matrix)
        value = float(similarity_matrix[0][1])
        similarity.append([value, data['URL'][i]])

    similarity.sort(key=take_key)
    similarity.reverse()
    rankings = similarity[:results]

    return rankings


query = 'Math'
result_count = 10
top_results = cosine_similarity(data, query, result_count)

print('Top Results:')
for i in range(len(top_results)):
    print(i+1, ':', top_results[i][1])


#Good: Music, Math, (keep testing more terms)
#Bad: Computer Science, (keep testing more terms)
